// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Currency {
  SOL
}

enum ListingType {
  AUCTION
  IMMEDIATE
  UNLISTED
}

enum Role {
  USER
  ADMIN
}

model Artist {
  id       Int       @id @default(autoincrement())
  name     String?
  address  String
  listings Listing[]
  user     User      @relation(fields: [userId], references: [id])
  userId   Int       @unique
  item     Item?     @relation(fields: [itemId], references: [id])
  itemId   Int?

  favouriteArtists FavouriteArtist[]
}

model FavouriteItem {
  id     Int  @id @default(autoincrement())
  item   Item @relation(fields: [itemId], references: [id])
  itemId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model FavouriteArtist {
  id       Int    @id @default(autoincrement())
  artist   Artist @relation(fields: [artistId], references: [id])
  artistId Int
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
}

model Listing {
  id            Int         @id @default(autoincrement())
  item          Item        @relation(fields: [itemId], references: [id])
  itemId        Int         @unique
  address       String
  currentPrice  Float
  currency      Currency    @default(SOL)
  type          ListingType
  Artist        Artist?     @relation(fields: [artistId], references: [id])
  artistId      Int?
  timeRemaining Int
  marketplace   Marketplace @relation(fields: [marketplaceId], references: [id])
  marketplaceId Int
  url           String
  updatedAt     DateTime    @updatedAt
}

model Item {
  id             Int             @id @default(autoincrement())
  address        String
  artists        Artist[]
  description    String?
  lastPrice      Int?
  listing        Listing?
  favouriteItems FavouriteItem[]
  name           String?
  url            String
  fileUrl        String
  updatedAt      DateTime        @updatedAt
  User           User?           @relation(fields: [userId], references: [id])
  userId         Int?
}

model Marketplace {
  id       Int       @id @default(autoincrement())
  listings Listing[]
  name     String
}

model User {
  id               Int               @id @default(autoincrement())
  address          String
  artist           Artist?
  favouriteItems   FavouriteItem[]
  favouriteArtists FavouriteArtist[]
  items            Item[]
  name             String?
}
